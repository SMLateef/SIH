app.js
const express = require('express');
const app = express();
const path = require("path");
const http = require("http");
const socketio = require("socket.io");

const server = http.createServer(app);
const io = socketio(server);

// Set the view engine to EJS
app.set("view engine", "ejs");

// Serve static files from the "public" directory
app.use(express.static(path.join(__dirname,"public")));

io.on("connection", function(socket) {
    socket.on("send-location",function (data){
       io.emit("receive-location",{id:socket.id, ...data}); 
    });

socket.on("disconnect",function(){
    io.emit("user.disconnect",socket.id)
})
});

app.get("/", function(req, res) {
    res.render("index");
});

server.listen(3000);


index.ejs
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real-Time Tracking App</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css" 
    integrity="sha512-h9FcoyWjHcOcmEVkxOfTLnmZFWIH0iZhZT1H2TbOq55xssQGEJHEaIm+PgoUaZbRvQTNTluNOEfb1ZRy6D3BOw==" 
    crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body>
    <div id="map"></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.js" 
    integrity="sha512-puJW3E/qXDqYp9IfhAI54BJEaWIfloJ7JWs7OeD5i6ruC9JZL1gERT1wjtwXFlh7CjE7ZJ+/vcRZRkIYIb6p4g==" 
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script src="https://cdn.socket.io/4.7.5/socket.io.min.js" 
    integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO" 
    crossorigin="anonymous"></script>

    <script src="/js/script.js"></script>

</body>

</html>

script.js
// Initialize the socket connection
const socket = io();

if(navigator.geolocation){
    navigator.geolocation.watchPosition((position)=>{
        const{latitude, longitude} = position.coords;
        socket.emit("send-location",{latitude,longitude});

    }, (error)=>{
        console.error(error);
    },
{
    enableHighAccuracy: true,
    timeout: 5000,
    maximunAge: 0,
}
);
}


const map = L.map("map").setView([0,0],16);

L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{
    attribution: "OpenStreetMap"
}).addTo(map)

const markers = {};

socket.on("receive-location",(data)=>{
    const{id,latitude,longitude} = data;
    map.setView([latitude, longitude]);
    if (markers[id]){
        markers[id].setLatLng([latitude, longitude]);

    }
    else{
        markers[id]=L.marker([latitude,longitude]).addTo(map);

    }
});

socket.on("user-disconnected",(id)=> {
if(markes[id]){
    map.removeLayer(markers[id]);
    delete markers[id];
}
});


style.css
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    }

    html,
    body{
    width: 100%;
    height: 100%;
    }

    #map{
        width: 100%;
        height: 1000%;
    }
